// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// Home row mods macro
#define HRML(k1,k2,k3) &lpht LGUI k1      &lpht LALT k2      &lpht LCTRL k3
#define BRML(k1,k2,k3) &lpht LS(LGUI) k1  &lpht LS(LALT) k2  &lpht LS(LCTRL) k3

#define HRMR(k1,k2,k3) &rpht RCTRL k1      &rpht RALT k2      &rpht RGUI k3
#define BRMR(k1,k2,k3) &rpht RS(RCTRL) k1  &rpht RS(RALT) k2  &rpht RS(RGUI) k3

/ {
    behaviors {
        rpht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0  1  2  3  4
                                          10 11 12 13 14
                                          20 21 22 23 24
                                                   30 31>;
        };

        lpht: positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5  6  7  8  9
                                          15 16 17 18 19
                                          25 26 27 28 29
                                          33 34>;
        };

        td_reset: tap_dance_reset {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RESET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&reset>;
        };

        td_bootloader: tap_dance_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&bootloader>;
        };

        td_bt_clear: tap_dance_bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUETOOTH_CLEAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&bt BT_CLR>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ; :     │
            &kp A     HRML(S,      D,         F)        &kp G          &kp H     HRMR(J,      K,         L)        &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │ , <      │ . >      │  / ?     │
            &kp Z     BRML(X,      C,         V)        &kp B          &kp N     BRMR(M,     COMMA,     DOT)       &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &kp LSHFT  &lt 2 SPACE    &lt 1 SPACE  &kp 1 RSHFT
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│ TAB      │  @       │  {       │  }       │          │   │          │  `       │  \       │  _       │  DELETE  │
            &kp TAB    &kp AT     &kp LBRC   &kp RBRC   &none          &none      &kp GRAVE  &kp BSLH   &kp UNDER  &kp DEL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│ ESCAPE   │  #       │  (       │  )       │          │   │          │  '       │  |       │  &       │  $       │
            &kp ESC   HRML(HASH,   KP_LPAR,   KP_RPAR)  &none          &none     HRMR(SQT,    PIPE,      AMPS)     &kp DLLR
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  ^       │  [       │  ]       │          │   │          │  "       │  !       │  ~       │          │
            &none     BRML(CARET,  LBKT,      RBKT)     &none          &none     BRMR(DQT,    EXCL,      TILDE)    &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        numbers_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  %       │  /       │  *       │          │   │          │  7       │  8       │  9       │  BSPC    │
            &none      &kp PRCNT  &kp FSLH   &kp ASTRK  &none          &none      &kp N7     &kp N8     &kp N9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  -       │  +       │  =       │          │   │          │  4       │  5       │  6       │  ENTER   │
            &none     HRML(MINUS,  PLUS,      EQUAL)    &none          &none     HRMR(N4,     N5,        N6)       &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │  0       │          │   │          │  1       │  2       │  3       │          │
            &none     BRML(&none, &none,      N0)       &none          &none     BRMR(N1,     N2,        N3)       &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│BOOTLOADER│          │          │          │          │   │  HOME    │  PG DOWN │  PG UP   │  END     │  BT 1    │
       &td_bootloader  &none      &none      &none      &none          &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &bt BT_SEL 0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  LEFT    │  DOWN    │  UP      │  RIGHT   │          │
            &none      &none      &none      &none      &none          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  RESET   │          │          │          │          │   │          │          │          │          │ BT CLEAR │
            &td_reset  &none      &none      &none      &none          &none      &none      &none      &none      &td_bt_clear
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
