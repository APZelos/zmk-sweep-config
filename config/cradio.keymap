// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        kp_sk: behavior_kp_sk {
            compatible = "zmk,behavior-hold-tap";
            label = "kp_sk";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&kp>, <&sk>;
        };

        td_reset: tap_dance_reset {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_RESET";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&reset>;
        };

        td_bootloader: tap_dance_bootloader {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BOOTLOADER";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&bootloader>;
        };

        td_bt_clear: tap_dance_bluetooth_clear {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_BLUETOOTH_CLEAR";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&none>, <&none>, <&bt BT_CLR>;
        };
    };

    combos {
        compatible = "zmk,combos";

        // LEFT COMBOS
        combo_left_gui_alt_control {
            timeout-ms = <50>;
            key-positions = <0 1 2 3>;
            bindings = <&kp_sk LG(LA(LCTRL))>;
        };

        combo_left_gui_control {
            timeout-ms = <50>;
            key-positions = <1 2 3>;
            bindings = <&kp_sk LG(LCTRL)>;
        };

        combo_left_gui {
            timeout-ms = <50>;
            key-positions = <1 2
                                 13>;
            bindings = <&kp_sk LGUI>;
        };

        combo_left_control {
            timeout-ms = <50>;
            key-positions = <11 12 13>;
            bindings = <&kp_sk LCTRL>;
        };

        combo_left_alt {
            timeout-ms = <50>;
            key-positions = <11 12
                                   23>;
            bindings = <&kp_sk LALT>;
        };

        combo_left_alt_control {
            timeout-ms = <50>;
            key-positions = <21 22 23>;
            bindings = <&kp_sk LA(LCTRL)>;
        };

        // RIGTH COMBOS
        combo_right_gui_alt_control {
            timeout-ms = <50>;
            key-positions = <6 7 8 9>;
            bindings = <&kp_sk RG(RA(RCTRL))>;
        };

        combo_right_gui_control {
            timeout-ms = <50>;
            key-positions = <6 7 8>;
            bindings = <&kp_sk RG(RCTRL)>;
        };

        combo_right_gui {
            timeout-ms = <50>;
            key-positions = <   7 8
                             16>;
            bindings = <&kp_sk RGUI>;
        };

        combo_right_control {
            timeout-ms = <50>;
            key-positions = <16 17 18>;
            bindings = <&kp_sk RCTRL>;
        };

        combo_right_alt {
            timeout-ms = <50>;
            key-positions = <   17 18
                             26>;
            bindings = <&kp_sk RALT>;
        };

        combo_right_alt_control {
            timeout-ms = <50>;
            key-positions = <26 27 28>;
            bindings = <&kp_sk RA(RCTRL)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        default_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  Q       │  W       │  E       │  R       │  T       │   │  Y       │  U       │  I       │  O       │  P       │
            &kp Q      &kp W      &kp E      &kp R      &kp T          &kp Y      &kp U      &kp I      &kp O      &kp P
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  A       │  S       │  D       │  F       │  G       │   │  H       │  J       │  K       │  L       │  ; :     │
            &kp A      &kp S      &kp D      &kp F      &kp G          &kp H      &kp J      &kp K      &kp L      &kp SEMI
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  Z       │  X       │  C       │  V       │  B       │   │  N       │  M       │  , <     │  . >     │  / ?     │
            &kp Z      &kp X      &kp C      &kp V      &kp B          &kp N      &kp M      &kp COMMA  &kp DOT    &kp FSLH
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                           &kp LSHFT  &lt 2 SPACE    &lt 1 SPACE  &kp RSHFT
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        symbols_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│  TAB     │  @       │  {       │  }       │          │   │          │  `       │  \       │  _       │  DELETE  │
            &kp TAB    &kp AT     &kp LBRC   &kp RBRC   &none          &none      &kp GRAVE  &kp BSLH   &kp UNDER  &kp DEL
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  ESCAPE  │  #       │  (       │  )       │          │   │          │  '       │  |       │  &       │  $       │
            &kp ESC    &kp HASH   &kp LPAR   &kp RPAR   &none          &none      &kp SQT    &kp PIPE   &kp AMPS   &kp DLLR
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  ^       │  [       │  ]       │          │   │          │  "       │  !       │  ~       │          │
            &none      &kp CARET  &kp LBKT   &kp RBKT   &none          &none      &kp DQT    &kp EXCL   &kp TILDE  &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        numbers_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│          │  %       │  /       │  *       │          │   │          │  7       │  8       │  9       │  BSPC    │
            &none      &kp PRCNT  &kp FSLH   &kp ASTRK  &none          &none      &kp N7     &kp N8     &kp N9     &kp BSPC
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │  -       │  +       │  =       │          │   │          │  4       │  5       │  6       │  ENTER   │
            &none      &kp MINUS  &kp PLUS   &kp EQUAL  &none          &none      &kp N4     &kp N5     &kp N6     &kp ENTER
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │  0       │          │   │          │  1       │  2       │  3       │          │
            &none      &none      &none      &kp N0     &none          &none      &kp N1     &kp N2     &kp N3     &none
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };

        tri_layer {
            bindings = <
        //╭──────────┬──────────┬──────────┬──────────┬──────────╮   ╭──────────┬──────────┬──────────┬──────────┬──────────╮
        //│BOOTLOADER│          │          │          │          │   │  HOME    │  PG DOWN │  PG UP   │  END     │  BT 1    │
       &td_bootloader  &none      &none      &none      &none          &kp HOME   &kp PG_DN  &kp PG_UP  &kp END    &bt BT_SEL 0
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│          │          │          │          │          │   │  LEFT    │  DOWN    │  UP      │  RIGHT   │          │
            &none      &none      &none      &none      &none          &kp LEFT   &kp DOWN   &kp UP     &kp RIGHT  &none
        //├──────────┼──────────┼──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┼──────────┼──────────┤
        //│  RESET   │          │          │          │          │   │          │          │          │          │ BT CLEAR │
            &td_reset  &none      &none      &none      &none          &none      &none      &none      &none      &td_bt_clear
        //╰──────────┴──────────┴──────────┼──────────┼──────────┤   ├──────────┼──────────┼──────────┴──────────┴──────────╯
                                             &trans     &trans         &trans     &trans
        //                                 ╰──────────┴──────────╯   ╰──────────┴──────────╯
            >;
        };
    };
};
